from genomics import *
# from utils import check_if_clump, compute_frequencies, count_non_overlapping_pattern_occurrences, count_pattern_occurrences, get_nucleotide_by_index, get_nucleotide_value, number_to_pattern, pattern_to_number, reverse_complement_string


print(
  reverse_complement_string("ATTGCC")
)

print(
  check_if_clump([0, 11, 15], 4, 20, 3)
)

print(
  get_nucleotide_value("A")
)

print(
  pattern_to_number("ATTGC")
)

print(
  number_to_pattern(5437, 7)
)

print(
  compute_frequencies("AAACCC", 3)
)

'''
print(
  count_pattern_occurrences("GGTGATACGGCTTACATACGGCATACGGCAGTGCATACGGCGAATACGGCATATACGGCATATACGGCATACGGCAAAAATGATACGGCGATACGGCATACGGCTATACGGCATACGGCAGCTTTACCATACGGCGGATACGGCTTTCATCCATACGGCTATACGGCGTGCGACATACGGCATACGGCATACGGCCCATACGGCTCAGCGGGTATACGGCATACGGCCGATACGGCCACAATACGGCGCATACGGCTTGCTGTCGACATACGGCAATACGGCGATACGGCTTATACGGCAGATCTATACGGCGCGACATACGGCACATATGTCAAGTATACGGCATATACGGCAATACGGCGATACGGCTCCGATACGGCGATACGGCATACGGCATACGGCAAATACGGCCGATACGGCGGCATACGGCTAATACGGCTGCCATACGGCGATACGGCGAAGTTCATACGGCATACGGCCCATACGGCGGATACGGCGTCGCTAGTATACGGCTACTATCTAGATACGGCAATACGGCATACGGCCAATACCCGAGATACGGCTTCGCTATACGGCATACGGCGTAACGCATGAATACGGCATACGGCCAGCCCCCCGTGGTATACGGCAGGGATACGGCATACGGCAATACGGCTATACGGCATACGGCATACGGCCACTATACGGCATACGGCGGATACGGCAATACGGCGGGCCAATACGGCCAGATACGGCTATACGGCGGGGGCATACATACGGCTATACGGCATACGGCTCTGACAATACGGCATACGGCCCCGTATACGGCACTATAATACGGCGATACGGCTGGTTCGTCGTTGGTATGATACGGCATACGGCATACGGCAGATACGGCCATACGGCTACAATACGGCAACGAATACGGCTCCGAACATACGGCAGATACGGCTCTGGGGACAAAATACGGCATACGGCTTGAGCATACGGC",
    "ATACGGCAT"
  )
)
'''

'''
print(
  count_non_overlapping_pattern_occurrences(  "GGTGATACGGCTTACATACGGCATACGGCAGTGCATACGGCGAATACGGCATATACGGCATATACGGCATACGGCAAAAATGATACGGCGATACGGCATACGGCTATACGGCATACGGCAGCTTTACCATACGGCGGATACGGCTTTCATCCATACGGCTATACGGCGTGCGACATACGGCATACGGCATACGGCCCATACGGCTCAGCGGGTATACGGCATACGGCCGATACGGCCACAATACGGCGCATACGGCTTGCTGTCGACATACGGCAATACGGCGATACGGCTTATACGGCAGATCTATACGGCGCGACATACGGCACATATGTCAAGTATACGGCATATACGGCAATACGGCGATACGGCTCCGATACGGCGATACGGCATACGGCATACGGCAAATACGGCCGATACGGCGGCATACGGCTAATACGGCTGCCATACGGCGATACGGCGAAGTTCATACGGCATACGGCCCATACGGCGGATACGGCGTCGCTAGTATACGGCTACTATCTAGATACGGCAATACGGCATACGGCCAATACCCGAGATACGGCTTCGCTATACGGCATACGGCGTAACGCATGAATACGGCATACGGCCAGCCCCCCGTGGTATACGGCAGGGATACGGCATACGGCAATACGGCTATACGGCATACGGCATACGGCCACTATACGGCATACGGCGGATACGGCAATACGGCGGGCCAATACGGCCAGATACGGCTATACGGCGGGGGCATACATACGGCTATACGGCATACGGCTCTGACAATACGGCATACGGCCCCGTATACGGCACTATAATACGGCGATACGGCTGGTTCGTCGTTGGTATGATACGGCATACGGCATACGGCAGATACGGCCATACGGCTACAATACGGCAACGAATACGGCTCCGAACATACGGCAGATACGGCTCTGGGGACAAAATACGGCATACGGCTTGAGCATACGGC",
    "ATACGGCAT"
  )
)

# should print 21, check the test case
'''